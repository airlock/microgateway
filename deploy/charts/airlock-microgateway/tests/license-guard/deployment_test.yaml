suite: helm.license-guard.TestDeployment
templates:
  - license-guard/deployment.yaml
tests:
  - it: should set name and namespace
    release:
      name: myoperator
      namespace: mytestnamespace
    asserts:
      - equal:
          path: metadata.name
          value: myoperator-airlock-microgateway-license-guard
      - equal:
          path: metadata.namespace
          value: mytestnamespace

  - it: should override fullname if provided
    set:
      nameOverride: myoperatorname
      fullnameOverride: operatorfullname
    release:
      name: operator-test-release
    asserts:
      - equal:
          path: metadata.name
          value: operatorfullname-license-guard

  - it: should set recommended selector labels
    release:
      name: myoperator
      namespace: mytestnamespace
    asserts:
      - equal:
          path: spec.selector.matchLabels
          value:
            app.kubernetes.io/name: airlock-microgateway-license-guard
            app.kubernetes.io/instance: myoperator
            app.kubernetes.io/component: server

  - it: should set recommended labels on pod template spec
    release:
      name: myoperator
      namespace: mytestnamespace
    chart:
      version: 1.2.3
      appVersion: 4.5.6
    asserts:
      - isSubset:
          path: spec.template.metadata.labels
          content:
            helm.sh/chart: airlock-microgateway-1.2.3
            app.kubernetes.io/version: "4.5.6"
            app.kubernetes.io/name: airlock-microgateway-license-guard
            app.kubernetes.io/instance: myoperator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/component: server
            app.kubernetes.io/part-of: airlock-microgateway

  - it: should set specific and common labels on pod template spec
    set:
      commonLabels:
        commonLabel: foo
      licenseGuard.podLabels:
        podLabel: bar
    asserts:
      - isSubset:
          path: spec.template.metadata.labels
          content:
            commonLabel: foo
            podLabel: bar

  - it: should set specific and common annotations on pod template spec
    set:
      commonAnnotations:
        commonAnnotation: bar
      licenseGuard.podAnnotations:
        podAnnotation: foo
    asserts:
      - isSubset:
          path: spec.template.metadata.annotations
          content:
            commonAnnotation: bar
            podAnnotation: foo

  - it: should merge annotations giving precedence on pod template spec to pod annotations over common annotations
    set:
      commonAnnotations:
        myAnnotation: common2
      licenseGuard.podAnnotations:
        podAnnotation: foo
        myAnnotation: pod
    asserts:
      - isSubset:
          path: spec.template.metadata.annotations
          content:
            podAnnotation: foo
            myAnnotation: pod

  - it: should make sure image uses tag
    set:
      licenseGuard.image.tag: 4.5.6
      licenseGuard.image.digest: ""
      licenseGuard.image.repository: docker.io/ergon/airlock-microgateway-license-guard-devel
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: docker.io/ergon/airlock-microgateway-license-guard-devel:4.5.6

  - it: should make sure digest takes precedence over image tag
    set:
      licenseGuard.image.tag: latest
      licenseGuard.image.digest: sha256:a3051f42d3013813b05f7513bb86ed6a3209cb3003f1bb2f7b72df249aa544d3
      licenseGuard.image.repository: docker.io/ergon/airlock-microgateway-license-guard-devel
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: docker.io/ergon/airlock-microgateway-license-guard-devel@sha256:a3051f42d3013813b05f7513bb86ed6a3209cb3003f1bb2f7b72df249aa544d3

  - it: should make sure digest is also used if no tag is available
    set:
      licenseGuard.image.tag: ""
      licenseGuard.image.digest: sha256:a3051f42d3013813b05f7513bb86ed6a3209cb3003f1bb2f7b72df249aa544d3
      licenseGuard.image.repository: docker.io/ergon/airlock-microgateway-license-guard-devel
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: docker.io/ergon/airlock-microgateway-license-guard-devel@sha256:a3051f42d3013813b05f7513bb86ed6a3209cb3003f1bb2f7b72df249aa544d3

  - it: should set replicaCount of deployment accordingly
    set:
      licenseGuard.replicaCount: 4
    asserts:
      - equal:
          path: spec.replicas
          value: 4

  - it: should set imagePullPolicy for container in pod spec
    set:
      licenseGuard.image.pullPolicy: Always
    asserts:
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: Always

  - it: does not create requests and limits resources if not set
    asserts:
      - notExists:
          path: spec.template.spec.containers[0].resources

  - it: should set specified requests and limits resources for memory and cpu in pod spec
    set:
      licenseGuard.resources:
       limits:
         memory: 64Mi
       requests:
         cpu: 50m
         memory: 64Mi
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 64Mi
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 64Mi
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 50m
      - isNotSubset:
          path: spec.template.spec.containers[0].resources.limits
          content:
            cpu: 50m

  - it: does not create imagePullSecrets if not set
    asserts:
      - notExists:
          path: spec.template.spec.imagePullSecrets

  - it: should create imagePullSecrets if set
    set:
      imagePullSecrets:
      - name: myRegistryPullSecret
    asserts:
      - contains:
          path: spec.template.spec.imagePullSecrets
          content:
            name: myRegistryPullSecret
          count: 1
          any: true

  - it: does not create node selectors if not set
    asserts:
      - notExists:
          path: spec.template.spec.nodeSelector

  - it: should create node selectors if set
    set:
      licenseGuard.nodeSelector:
        label: foo
    asserts:
      - equal:
          path: spec.template.spec.nodeSelector.label
          value: foo

  - it: does not create tolerations if not set
    asserts:
      - notExists:
          path: spec.template.spec.tolerations

  - it: should render tolerations if set
    set:
      licenseGuard.tolerations:
        - key: "example-key"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "example-key2"
          operator: "Exists"
          effect: "NoSchedule"
    asserts:
      - equal:
          path: spec.template.spec.tolerations[0].key
          value: example-key
      - equal:
          path: spec.template.spec.tolerations[1].key
          value: example-key2

  - it: does render default 'podAntiAffinity' spec as affinity if not specified
    release:
      name: myoperator
    asserts:
      - contains:
          path: spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution
          content:
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: airlock-microgateway-license-guard
                  app.kubernetes.io/instance: myoperator
                  app.kubernetes.io/component: server
              topologyKey: kubernetes.io/hostname
            weight: 100
          count: 1
          any: true

  - it: does overwrite default affinity if set
    set:
      licenseGuard.affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
    asserts:
      - equal:
          path: spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey
          value: kubernetes.io/hostname
