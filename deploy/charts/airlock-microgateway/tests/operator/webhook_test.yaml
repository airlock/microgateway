suite: helm.operator.TestWebhook
templates:
  - operator/mutating-webhook.yaml
  - operator/validating-webhook.yaml
tests:
  - it: should not create mutatingwebhookconfiguration if operator.sidecarGateway.enabled is false
    set:
      operator.sidecarGateway.enabled: false
    release:
      name: myoperator
      namespace: mytestnamespace
    template: operator/mutating-webhook.yaml
    asserts:
      - hasDocuments:
          count: 0

  - it: should set name and namespace
    release:
      name: myoperator
      namespace: mytestnamespace
    asserts:
      - equal:
          path: metadata.name
          value: myoperator-microgateway-operator-webhook-mytestnamespace
      - equal:
          path: metadata.namespace
          value: mytestnamespace

  - it: should override fullname if provided
    set:
      nameOverride: myoperatorname
      fullnameOverride: operatorfullname
    release:
      name: myoperator
      namespace: mytestnamespace
    asserts:
      - equal:
          path: metadata.name
          value: operatorfullname-operator-webhook-mytestnamespace

  - it: should inject server certificate for cert-manager in annotations (if certificateProvider is cert-manager)
    release:
      name: myoperator
      namespace: mytestnamespace
    set:
      operator.webhook.certificateProvider: cert-manager
    asserts:
      - isSubset:
          path: metadata.annotations
          content:
            cert-manager.io/inject-ca-from: mytestnamespace/myoperator-microgateway-operator-serving-cert

  - it: should not inject server certificates in annotations
    release:
      name: myoperator
      namespace: mytestnamespace
    set:
      operator.webhook.certificateProvider: none
    asserts:
      - isNullOrEmpty:
          path: metadata.annotations

  - it: should set webhooks
    asserts:
      - isNotNullOrEmpty:
          path: webhooks

  - it: should set namespace selector
    set:
      operator.watchNamespaceSelector:
        matchLabels:
          microgateway.airlock.com/enable: "true"
        matchExpressions:
          - { key: environment, operator: NotIn, values: [ test ] }
    asserts:
      - equal:
          path: webhooks.*.namespaceSelector
          value:
            matchLabels:
              microgateway.airlock.com/enable: "true"
            matchExpressions:
              - { key: environment, operator: NotIn, values: [ test ] }

  - it: should set watch namespace list as selector
    set:
      operator.watchNamespaces:
        - foo
        - bar
        - jin
    asserts:
      - equal:
          path: webhooks.*.namespaceSelector
          value:
            matchExpressions:
              - { key: kubernetes.io/metadata.name, operator: In, values: [ foo, bar, jin ] }