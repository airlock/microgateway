apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: airlock-microgateway-operator
    app.kubernetes.io/version: 4.0.0-beta1
  name: parsers.microgateway.airlock.com
spec:
  group: microgateway.airlock.com
  names:
    categories:
      - airlock-microgateway
    kind: Parser
    listKind: ParserList
    plural: parsers
    singular: parser
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Parser contains the configuration for content parsers (default and custom).
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the desired parser behavior.
              properties:
                request:
                  description: Request defines the parsing for downstream requests.
                  properties:
                    defaultContentType:
                      default: application/x-www-form-urlencoded
                      description: DefaultContentType specifies the content-type header which should be injected into the request before parser selection if it is not already present and the request has a body.
                      minLength: 1
                      type: string
                    parsers:
                      description: Parsers defines the configuration for the available content parsers.
                      properties:
                        form:
                          description: Form defines the configuration for the form parser.
                          properties:
                            enable:
                              default: true
                              description: Enable defines whether form payloads are inspected.
                              type: boolean
                            mediaTypePattern:
                              default: .*urlencoded.*
                              description: MediaTypePattern is a regex specifying the media types for which the request body should be treated as form arguments.
                              minLength: 1
                              type: string
                          type: object
                        json:
                          description: JSON defines the configuration for the JSON parser
                          properties:
                            enable:
                              default: true
                              description: Enable defines whether json payloads are inspected.
                              type: boolean
                            mediaTypePattern:
                              default: .*json.*
                              description: MediaTypePattern is a regex specifying the media types for which the request body should be treated as JSON.
                              minLength: 1
                              type: string
                          type: object
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: true
